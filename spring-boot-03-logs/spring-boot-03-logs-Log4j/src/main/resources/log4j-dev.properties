### 配置根Logger ###
log4j.rootLogger = info,stdout,D,E

### 输出到控制台 ###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern =  %d{ABSOLUTE} %5p %20c{1}:%3L - %m%n

### 输出到日志文件 ###
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.File = logs/log.log
log4j.appender.D.Append = true
## 输出DEBUG级别以上的日志
log4j.appender.D.Threshold = DEBUG
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

### 保存异常信息到单独文件 ###
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
## 异常日志文件名
log4j.appender.E.File = logs/error.log
## Append=false:默认值是true,即将消息增加到指定文件中，false指将消息覆盖指定的文件内容
log4j.appender.E.Append = true
## 只输出ERROR级别以上的日志
log4j.appender.E.Threshold = ERROR
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n


###############################################################################################################################
## 自定义包下日志级别
## log4j.category.cn.timebusker.util=debug,Errorfile,Infofile,Debugfile
## 应用开发环境设定日志级别变量
log4j.category.cn.timebusker.util=${logging.level.cn.timebusker},Errorfile,Infofile,Debugfile

log4j.appender.Errorfile=org.apache.log4j.RollingFileAppender
log4j.appender.Errorfile.File=logs/core-error.log
## ImmediateFlush=true:默认值是true,意谓着所有的消息都会被立即输出。
log4j.appender.Errorfile.ImmediateFlush=true
## log4j.appender.Errorfile.DatePattern='.'yyyyMMdd
## MaxFileSize=100KB: 后缀可以是KB, MB 或者是 GB. 在日志文件到达该大小时，将会自动滚动，即将原来的内容移到core-error.log.1文件
log4j.appender.Errorfile.MaxFileSize=100MB
## MaxBackupIndex=100:指定可以产生的滚动文件的最大数
log4j.appender.Errorfile.MaxBackupIndex=100
## Threshold：指定日志消息的输出最低层次
log4j.appender.Errorfile.Threshold=error
log4j.appender.Errorfile.layout=org.apache.log4j.PatternLayout
log4j.appender.Errorfile.layout.ConversionPattern=%d{yyyy MM-dd HH:mm:ss,SSS} [timebusker] %5p [%t] %C.%M(%L) | %m%n

log4j.appender.Infofile=org.apache.log4j.RollingFileAppender
log4j.appender.Infofile.File=logs/core-info.log
## log4j.appender.Infofile.DatePattern='.'yyyyMMdd
log4j.appender.Infofile.MaxFileSize=100MB
log4j.appender.Infofile.MaxBackupIndex=100
log4j.appender.Infofile.Threshold=info
log4j.appender.Infofile.layout=org.apache.log4j.PatternLayout
log4j.appender.Infofile.layout.ConversionPattern=%d{yyyy MM-dd HH:mm:ss,SSS} [timebusker] %5p [%t] %C.%M(%L) | %m%n

log4j.appender.Debugfile=org.apache.log4j.RollingFileAppender
log4j.appender.Debugfile.File=logs/core-debug.log
## log4j.appender.Debugfile.DatePattern='.'yyyyMMdd
log4j.appender.Debugfile.MaxFileSize=100MB
log4j.appender.Debugfile.MaxBackupIndex=100
log4j.appender.Debugfile.Threshold=debug
log4j.appender.Debugfile.layout=org.apache.log4j.PatternLayout
log4j.appender.Debugfile.layout.ConversionPattern=%d{yyyy MM-dd HH:mm:ss,SSS} [timebusker] %5p [%t] %C.%M(%L) | %m%n